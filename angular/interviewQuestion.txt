what is angular =====>
-java script binding framework whoch binds the HTML uiand java script model. and helps you to implement MVC.
-reduce the effort to writing business logic.
- help to build spa 
- binding framework: follow MVC pattern

angular js: 
  language  - java script language
  archetecture   - controller
server side: NO
SEO: NO
lazy loading: NO
CLI: NO
MObile compilient: NO


Angular:
 - 2,4,5,6..9 ivy
language - typescript
archetecture: component
server side: Yes
SEO: Yes
lazy loading: Yes
CLI: Yes
MObile compilient: Yes


What are directive in angular ====>

- attach behaviour to html dom.
- directive chnage the behaviour of HTML DOM
- [()], {}}, [hidden]


Type of the directive in angular ====>

- Strutural
  - change the DOM layout by addding and removing element

- Attribute
 [hidden]: not chnage structure only chnge behaviour

- Component
  user control which has own template

what is NPM and node_modules ====>

NPM: Node pacjmahe manager (js framework linrary)
node_modules: where package are installed.

what is package.json ====>
where js framework is listed down

************************** typescript *****************************************
chek type script version: tsc --version

1) What is typescript and why do we need it.?
  - extends java script adding type to the language
  - Super set of js (TYpe checl)
  - gives nice oops progrmming environemnt which transpile / converts to java scipt.
  - strongly type will have less error.

** Compoent and module:
 Compoent: where you write your binding
 MOdule: Logically group Components

 ** What is decorator.
   - define what kind of angular class it.
    exp: @Component: says it is angular component
        @NgModule: become angulare module

** What are the annotation or MetaData?

** Type of Databinding
  4 typw of bindng
 - How view and controller communicate each other.
  - Expression or INterpolation: {{}}
  - Property binding (Square bracket): set values for properties of HTML elements [] - data flow from component to view
  - 2 Way binding[()]: 
  - Event binding (): send event from view to the component

** Agular archetecture
 - View + Component + Group of component called Module

 1) Tempplete: HTML View
 2) omponent: Bind view and model
 3) Modules: Group component logically
 4) binding: ho view and component communicate
 5) Diretcives: chnage HTML DOM behaviour
 6) Services: help to share common logic across the project
 7) DI: help to inject instance across constructor


 ** SPA (Single Page application)
  - where main UI gets loaded once and then UI is loaded on demand.

** How to implement routing.
   1) Need collections
 export const = [
   {path:'', component:''}
 ]
  2) router outlet
  3) 


** What is lazy loading in angular.
 - On demand loading

  1) Divide project into modules.
  2) use loadchildren() in route collections

** What are the services in agular.
  - service helps you to share common logic across angualr application.


** Depedency injection
 - application design pattern where rather than creating object instance from within the component, angular inject it via the constructer.
 Provider property belong to @NgModule.

 DI benefits: 
 - Decouple the class depedencies, chnage it one palace not to diff palace.

 ** Dfifference b/w ng build nd ng serve.
  - ng server build in memory(RAM)

  - ng build: build on the hard disk


** Explain the --prod parameter in ng build.
  - compress your js , remove comments, c reate GUID of js for ready for production


**************************************** PART 2 ******************************************

1) ** Explain ViewChild and ViewChildren.
   - help to reference elemennt of the view
  - If single html DOM use "VIEW CHILD".
  - If collection of elements use "VEIW CHILDREN"
  @VeiwChild('div1', {static:false}) divref:ElementRef

2) ** What is template reference variable.
  - refer html dom element.

3) what is content projection.
 - display text from one compoent view to other component view.
  - componet 1 view: <b slot1>Welcome </b>
  - component 2 view: <ng-content select="slot1"> </ng-content>
       o/p = Welcome

 4) what is content projection slot.
   - 

5) What is content Child and content children.
  - contentChild: single projected content.
  - contentChildren: access  collections of projected content
  - help to access projected contents from parent component.

************************* PART 3************************************

